apiVersion: v1
kind: Service
metadata:
  name: web
  labels:
    app: myflaskapp
spec:
  ports:
  - name: "5000"
    port: 5000
    targetPort: 5000
  selector:
    app: myflaskapp
    tier: web
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: web
  labels:
    app: myflaskapp
    tier: web
spec:
  selector:
    matchLabels:
      app: myflaskapp
      tier: web
  replicas: 2
  strategy:
    type: Recreate 
  template:
    metadata:
      labels:
        app: myflaskapp
        tier: web
    spec:
      containers:
      - image: takacsmark/flask-sql-ci-web:2.0.0-prod
        name: web
        env:
        - name: FLASK_APP
          value: autoapp.py
        - name: FLASK_DEBUG
          value: "0"
        - name: FLASK_ENV
          value: production
        - name: POSTGRES_PASSWORD
          value: /run/secrets/db-password
        - name: APP_SECRET
          value: /run/secrets/app-secret      
        ports:
        - containerPort: 5000
          name: web
        volumeMounts:
        - name: db-password
          mountPath: "/run/secrets/db-password"
          subPath: "db-password"
          readOnly: true
        - name: app-secret
          mountPath: "/run/secrets/app-secret" 
          subPath: "app-secret"
          readOnly: true          
      restartPolicy: Always
      volumes:
      - name: db-password
        secret:
          secretName: db-password
          items:
          - key: _db_password.txt
            path: db-password
      - name: app-secret
        secret:
          secretName: app-secret
          items:
          - key: _app_secret.txt
            path: app-secret